/* eslint-disable no-console */

/*variables for tests*/
const posts = new PostList();
let viewer = new ViewGallery();
let user = new User('yana');
user.userPhoto = 'https://pp.userapi.com/c845221/v845221313/10fe34/q1LKzkYbEpM.jpg';


/* some fellows for the beginning*/
posts.addPhotoPost(new Post(new Photo('img/1.jpg', 'yana'), 'lick', ['animals', 'cute'], new Date(), undefined, 54));
posts.addPhotoPost(new Post(new Photo('img/2.jpg', 'vova'), '', [], new Date(), ['yana']));
posts.addPhotoPost(new Post(new Photo('img/3.jpg', 'kolya'), 'sea', [], new Date()));
posts.addPhotoPost(new Post(new Photo('img/4.jpg', 'masha'), 'dragon', ['magic', 'cute'], new Date()));
posts.addPhotoPost(new Post(new Photo('img/5.jpg', 'misha'), '', [], new Date()));
posts.addPhotoPost(new Post(new Photo('img/6.jpg', 'katty'), '', ['animals', 'cute', 'cat'], new Date()));
posts.addPhotoPost(new Post(new Photo('img/7.jpg', 'alex'), '', [], new Date()));
posts.addPhotoPost(new Post(new Photo('img/8.jpg', 'vladimir'), '', [], new Date()));
posts.addPhotoPost(new Post(new Photo('img/9.jpg', 'angel'), 'flowers', [], new Date(), ['vova', 'sasha'], 64));
posts.addPhotoPost(new Post(new Photo('img/10.jpg', 'maxime'), '', [], new Date()));
posts.addPhotoPost(new Post(new Photo('img/11.jpg', 'dasha'), 'tree', [], new Date()));
posts.addPhotoPost(new Post(new Photo('img/12.jpg', 'alina'), '', [], new Date()));
posts.addPhotoPost(new Post(new Photo('img/13.jpg', 'kirill'), '', [], new Date()));

/*argument post must be an instance of the class Post. (it's first argument is instance pf the class Post) 
You can put id in the constructor, what is made for tests (like i made id 54 and 64), but normally it's generated by function inside a class*/
function addPost(post, viewer) {

	if (!posts.addPhotoPost(post)) {
		return false;   
	}
	viewer.showPost(post);
	viewer.incrementShown();
	return true;
}
/*first and second arguments must be defined above variables (posts and viewer)*/
function showPosts(posts, viewer, skip, amount) {
	viewer.showPhotoPosts(posts, skip, amount);
}
/*set user; argument - instance of the class User, which is defined above*/
function activeUser(user) {
	ViewHeader.activeUser(user);
}
/*guest mode*/
function guest() {
	ViewHeader.guest();
}
/*first and second arguments must be defined above variables (posts and viewer)*/
function removePhotoPost(posts, viewer, id) {
	if (!posts.removePhotoPost(id)) {
		return false;
	}
	viewer.removePost(id);
	viewer.decrementShown();
	return true;
}
/*exist authors*/
function existAuthors(posts) {
	return posts.getListOfAuthors();
}

/*edit post; argument post must be an instance of the class Post*/
/*first and second arguments must be defined above variables (posts and viewer)*/
function editPost(posts, viewer, id, new_post) {
	if (!posts.editPhotoPost(id, new_post)) {
		return false;
	}
	viewer.redrawPost(id, new_post);
	return true;
}